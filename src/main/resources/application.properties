server.port=8086
spring.datasource.url=jdbc:mysql://localhost:3306/booking-travel?createDatabaseIfNotExist=true
#spring.datasource.url=jdbc:mysql://localhost:3306/booking-travel
spring.datasource.username=root
spring.datasource.password=b2005736
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# jwt token
jwt.secrect=mySecretKeyz
jwt.expiration=360000

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

#path upload
#upload.path=/upload
#spring.resources.static-locations=classpath:/upload
#spring.servlet.multipart.max-file-size=30MB
#spring.servlet.multipart.max-request-size=30MB

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.show-sql=true

#IMPPORT DATA -> DATABASE
#spring.profiles.active=development
#logging.level.org.hibernate=DEBUG
#spring.sql.init.mode=always
#spring.sql.init.platform=mysql
#spring.sql.init.data-locations=classpath:/data-mysql.sql

# CONNECT API
spring.mvc.cors.allowed-origins=http://localhost:3000 
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE
spring.mvc.cors.allowed-headers=Authorization,Content-Type
spring.mvc.cors.exposed-headers=Custom-Header


#send mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#spring.mail.username=trithuc0416@gmail.com
#spring.mail.password=owzcmxwgtnvgzbqo
spring.mail.username=hoanglong255l@gmail.com
spring.mail.password=jlmjzthdhoflmmuv
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


#kafka
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=emailID
#
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*


##Redis
#spring.data.redis.host=localhost
#spring.data.redis.port=6379

#Cloudinary
cloudinary.cloud-name=dhitvvwzj
cloudinary.api-key=352255363859438
cloudinary.api-secret=Dg-ybZD8C13nY-EfQk1S3SL4LYA